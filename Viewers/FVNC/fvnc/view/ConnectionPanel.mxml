<?xml version="1.0" encoding="utf-8"?>
<!--
 * FVNC: A VNC Client for Flash Player 9 and above
 * Copyright (C) 2005-2006 Darron Schall <darron@darronschall.com>
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
 * 02111-1307 USA
-->		
<mx:Canvas 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns="*"
	width="300" height="250"
	creationComplete="initializeComponents();">

     <mx:Script>
    	<![CDATA[

		import flash.net.SharedObject;
		import fvnc.events.ConnectEvent;
		
		/** A local shared object to store connection information */
		private var cache:SharedObject;
		
		/**
		 * Runs initialization when the panel is first created and displayed.
		 */
		private function initializeComponents():void
		{
			cache = SharedObject.getLocal( "fvnc.cache" );
			port.text = cache.data.port == null ? "5900" : cache.data.port;
			
			if ( cache.data.servers == null )
			{
				server.dataProvider = [ "192.168.1.105" ];
			}
			else
			{
				server.dataProvider = String( cache.data.servers ).split( "," );
			}
		}

		/**
		 * Event handler:  Called when the connect button is clicked.
		 * Fire off a ConnectEvent to anyone interested
		 */
		public function handleConnect():void
		{
			// Create a new event to send off
			var ce:ConnectEvent = new ConnectEvent();
			// Populate event with data from the for
			ce.host = server.text;
			ce.port = parseInt( port.text );
			ce.id = parseInt( rid.text );
			
			// Save the data in the cache
			updateSharedObject();
			
			// Send off the event to listeners
			dispatchEvent( ce );
		}

		/**
		 * Updates the cache to store the port and server
		 */
		private function updateSharedObject():void
		{
			cache.data.port = port.text;
			
			var obj:Object = new Object();
			for ( var i:int = 0; i < server.dataProvider.length; i++ )
			{
				obj[ server.dataProvider[i] ] = "";	
			}
			
			obj[ server.text ] = "";
			var serverList:Array = new Array();
			for ( var prop:String in obj )
			{
				serverList.push( prop );
			}
			
			cache.data.servers = serverList.join( "," ); 
			cache.flush();
		}

		]]>
	</mx:Script>
	
	<mx:Panel id="connectPanel" horizontalAlign="right" title="FVNC: Connection Details" width="290" height="212">
		
		<mx:Form defaultButton="{connectButton}" height="163" width="271">
			
			<mx:FormItem id="serverItem" label="Server:">
				<mx:ComboBox id="server" editable="true" width="150" />
			</mx:FormItem>
			
			<mx:FormItem id="portItem" label="Port:">
				<mx:TextInput id="port" width="50" />
			</mx:FormItem>
			<mx:FormItem label="ID:" id="idItem">
				<mx:TextInput width="150" maxChars="8" id="rid"/>
			</mx:FormItem>
			
			<mx:FormItem horizontalAlign="right" width="100%">
				<mx:Button id="connectButton" label="Connect" click="handleConnect();" />
			</mx:FormItem>
		
		</mx:Form>
		
	</mx:Panel>

</mx:Canvas>